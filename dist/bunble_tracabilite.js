/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/tracabilite.js":
/*!****************************!*\
  !*** ./src/tracabilite.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supprimerBus: () => (/* binding */ supprimerBus),\n/* harmony export */   toggleVoyageurs: () => (/* binding */ toggleVoyageurs)\n/* harmony export */ });\n// Configuration Firebase (à remplacer par votre configuration)\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCFERME8CyH09LWGnb0tOo-WEZZaB3YgoI\",\r\n    authDomain: \"voyage-essaie.firebaseapp.com\",\r\n    databaseURL: \"https://voyage-essaie-default-rtdb.firebaseio.com\",\r\n    projectId: \"voyage-essaie\",\r\n    storageBucket: \"voyage-essaie.firebasestorage.app\",\r\n    messagingSenderId: \"534600678204\",\r\n    appId: \"1:534600678204:web:078b496fa178faf40bfc39\"\r\n};\r\n\r\n// Initialisation de Firebase\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst db = firebase.firestore();\r\n\r\n// Fonction pour afficher/masquer les détails des voyageurs\r\nasync function toggleVoyageurs(busId, codebus) {\r\n    // Vérifier si la ligne de détails existe déjà\r\n    const existingDetails = document.getElementById(`details-${busId}`);\r\n    if (existingDetails) {\r\n        existingDetails.remove();\r\n        return;\r\n    }\r\n\r\n    // Afficher le chargement\r\n    const loadingRow = document.createElement('tr');\r\n    loadingRow.id = `details-${busId}`;\r\n    loadingRow.innerHTML = `<td colspan=\"15\" class=\"loading-details\"><i class=\"fas fa-spinner fa-spin\"></i> Chargement des voyageurs...</td>`;\r\n    \r\n    // Insérer la ligne de chargement\r\n    const busRow = document.getElementById(`bus-${busId}`);\r\n    busRow.parentNode.insertBefore(loadingRow, busRow.nextSibling);\r\n\r\n    try {\r\n        // Récupérer les transactions pour ce bus\r\n        const transactionsRef = db.collection('TRANSACTIONS');\r\n        \r\n        // Requête unique sur le champ codebus qui correspond à motpassebus\r\n        const querySnapshot = await transactionsRef.where('codebus', '==', parseInt(codebus)).get();\r\n        \r\n        // Créer la ligne de détails\r\n        const detailsRow = document.createElement('tr');\r\n        detailsRow.id = `details-${busId}`;\r\n        detailsRow.className = 'voyageurs-details';\r\n        \r\n        if (querySnapshot.empty) {\r\n            detailsRow.innerHTML = `\r\n                <td colspan=\"15\" class=\"no-voyageurs\">\r\n                    <i class=\"fas fa-info-circle\"></i> Aucun voyageur trouvé pour ce bus.\r\n                </td>`;\r\n        } else {\r\n            // Créer le contenu du tableau des voyageurs\r\n            let voyageursHTML = `\r\n                <td colspan=\"15\">\r\n                    <div class=\"voyageurs-container\">\r\n                        <h4>Liste des voyageurs (${querySnapshot.size})</h4>\r\n                        <table class=\"voyageurs-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Code Bus</th>\r\n                                    <th>Code Ticket</th>\r\n                                    <th>Agence</th>\r\n                                    <th>Date d'achat</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>`;\r\n            \r\n            // Parcourir les transactions et ajouter chaque voyageur\r\n            querySnapshot.forEach(doc => {\r\n                const data = doc.data();\r\n                const dateAchat = data.timestamp ? new Date(data.timestamp.seconds * 1000).toLocaleString() : 'N/A';\r\n                \r\n                voyageursHTML += `\r\n                                <tr>\r\n                                    <td>${data.codebus || 'N/A'}</td>\r\n                                    <td>${data.ticketCode || 'N/A'}</td>\r\n                                    <td>${data.nomagence || 'N/A'}</td>\r\n                                    <td>${dateAchat}</td>\r\n                                </tr>`;\r\n            });\r\n            \r\n            voyageursHTML += `\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </td>`;\r\n            \r\n            detailsRow.innerHTML = voyageursHTML;\r\n        }\r\n        \r\n        // Remplacer la ligne de chargement par les détails\r\n        loadingRow.replaceWith(detailsRow);\r\n        \r\n    } catch (error) {\r\n        console.error('Erreur lors de la récupération des voyageurs:', error);\r\n        loadingRow.innerHTML = `\r\n            <td colspan=\"15\" class=\"error-details\">\r\n                <i class=\"fas fa-exclamation-triangle\"></i> Erreur lors du chargement des voyageurs.\r\n            </td>`;\r\n    }\r\n}\r\n\r\n\r\n// Fonction pour supprimer un bus et ses transactions associées\r\nasync function supprimerBus(busId, motpassebus) {\r\n    if (!confirm('Êtes-vous sûr de vouloir supprimer ce bus et tous les billets associés ?')) {\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Supprimer d'abord les transactions associées\r\n        const transactionsRef = db.collection('CONTROLE').doc('TRANSACTIONS').collection('NG_TICKET');\r\n        const querySnapshot = await transactionsRef.where('codebus', '==', parseInt(motpassebus)).get();\r\n        \r\n        // Supprimer tous les documents correspondants\r\n        const batch = db.batch();\r\n        querySnapshot.forEach((doc) => {\r\n            batch.delete(doc.ref);\r\n        });\r\n        \r\n        // Exécuter la suppression en lot\r\n        await batch.commit();\r\n        console.log(`${querySnapshot.size} transactions supprimées pour le bus ${motpassebus}`);\r\n        \r\n        // Ensuite, supprimer le bus\r\n        await db.collection('CONTROLE').doc('BUS').collection('NG_TICKET').doc(busId).delete();\r\n        console.log('Bus supprimé avec succès');\r\n        alert('Le bus et tous les billets associés ont été supprimés avec succès');\r\n         setTimeout(function() {\r\n                        location.reload(true);\r\n                      }, 4000);\r\n    } catch (error) {\r\n        console.error('Erreur lors de la suppression:', error);\r\n        alert('Une erreur est survenue lors de la suppression. Veuillez réessayer.');\r\n    }\r\n}\r\n// Exposer les fonctions au scope global\r\nif (typeof window !== 'undefined') {\r\n    window.toggleVoyageurs = toggleVoyageurs;\r\n    window.supprimerBus = supprimerBus;\r\n}\r\n\r\n// Exporter pour les modules ES6\r\n\r\n\r\n// Style pour les détails des voyageurs\r\nconst style = document.createElement('style');\r\nstyle.textContent = `\r\n    /* Style pour les détails des voyageurs */\r\n    .voyageurs-details {\r\n        background-color: #f9f9f9;\r\n    }\r\n    \r\n    .voyageurs-details td {\r\n        padding: 0 !important;\r\n        border-top: none;\r\n    }\r\n    \r\n    .voyageurs-container {\r\n        padding: 15px;\r\n        background-color: #f5f5f5;\r\n        border-radius: 4px;\r\n        margin: 5px 0;\r\n    }\r\n    \r\n    .voyageurs-table {\r\n        width: 100%;\r\n        border-collapse: collapse;\r\n        margin-top: 10px;\r\n        background-color: white;\r\n        border-radius: 4px;\r\n        overflow: hidden;\r\n    }\r\n    \r\n    .voyageurs-table th, \r\n    .voyageurs-table td {\r\n        padding: 10px 15px;\r\n        text-align: left;\r\n        border: 1px solid #ddd;\r\n    }\r\n    \r\n    .voyageurs-table th {\r\n        background-color: #4CAF50;\r\n        color: white;\r\n        font-weight: 500;\r\n    }\r\n    \r\n    .voyageurs-table tr:nth-child(even) {\r\n        background-color: #f2f2f2;\r\n    }\r\n    \r\n    .voyageurs-table tr:hover {\r\n        background-color: #e6e6e6;\r\n    }\r\n    \r\n    .loading-details, \r\n    .no-voyageurs,\r\n    .error-details {\r\n        padding: 15px;\r\n        text-align: center;\r\n        color: #666;\r\n    }\r\n    \r\n    .error-details {\r\n        color: #d32f2f;\r\n    }\r\n    \r\n    .voyageurs-container h4 {\r\n        margin: 0 0 10px 0;\r\n        color: #333;\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n    }\r\n`;\r\ndocument.head.appendChild(style);\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Éléments du DOM\r\n    const agencesList = document.getElementById('agences-list');\r\n    const mobileMenuBtn = document.getElementById('mobile-menu');\r\n    const navLinks = document.getElementById('nav-links');\r\n\r\n        // La fonction supprimerBus est maintenant définie dans la portée globale\r\n\r\n    // Fonction pour afficher la liste des bus pour une destination\r\n    async function afficherBus(destinationId, container) {\r\n        try {\r\n            // Afficher le chargement\r\n            container.innerHTML = '<div class=\"loading-bus\"><i class=\"fas fa-spinner fa-spin\"></i> Chargement des bus...</div>';\r\n            \r\n            // Récupérer d'abord les informations de la destination\r\n            const destinationDoc = await db.collection('CONTROLE').doc('DESTINATION').collection('NG_TRAVEL').doc(destinationId).get();\r\n            if (!destinationDoc.exists) {\r\n                container.innerHTML = '<div class=\"no-bus\">Destination non trouvée</div>';\r\n                return;\r\n            }\r\n            const destination = destinationDoc.data();\r\n            \r\n            console.log('Recherche des bus pour:', destination.ville1, destination.quartier1);\r\n            \r\n            // Récupérer les bus correspondant à cette destination\r\n            const busSnapshot = await db.collection('CONTROLE').doc('BUS').collection('NG_TICKET')\r\n                .where('ville_depart', '==', destination.ville1)\r\n                .where('quartier_depart', '==', destination.quartier1)\r\n                .get();\r\n                \r\n            console.log('Nombre de bus trouvés:', busSnapshot.size);\r\n\r\n            if (busSnapshot.empty) {\r\n                container.innerHTML = `\r\n                    <div class=\"no-bus\">\r\n                        Aucun bus programmé pour ${destination.ville1}, ${destination.quartier1}\r\n                    </div>`;\r\n                return;\r\n            }\r\n\r\n            // Fonction pour formater la date avec le jour de la semaine\r\n            function formaterDateAvecJour(dateStr) {\r\n                if (!dateStr) return 'Date non spécifiée';\r\n                \r\n                const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n                try {\r\n                    const date = new Date(dateStr);\r\n                    // Vérifier si la date est valide\r\n                    if (isNaN(date.getTime())) return dateStr;\r\n                    \r\n                    // Mettre en majuscule la première lettre du jour\r\n                    const dateFormatee = date.toLocaleDateString('fr-FR', options);\r\n                    return dateFormatee.charAt(0).toUpperCase() + dateFormatee.slice(1);\r\n                } catch (e) {\r\n                    return dateStr;\r\n                }\r\n            }\r\n\r\n            // Grouper les bus par date de voyage\r\n            const busesParDate = {};\r\n            busSnapshot.forEach(doc => {\r\n                const bus = doc.data();\r\n                const dateVoyage = bus.date_voyage || 'Date non spécifiée';\r\n                \r\n                if (!busesParDate[dateVoyage]) {\r\n                    busesParDate[dateVoyage] = [];\r\n                }\r\n                busesParDate[dateVoyage].push({ id: doc.id, ...bus });\r\n            });\r\n\r\n            let busHTML = '';\r\n            \r\n            // Trier les dates par ordre chronologique\r\n            const datesTriees = Object.entries(busesParDate).sort((a, b) => {\r\n                return new Date(a[0]) - new Date(b[0]);\r\n            });\r\n\r\n            // Fonction pour récupérer les statistiques des places prises\r\n            async function getBusStatistics(busId, codeBus) {\r\n                try {\r\n                    const transactionsSnapshot = await db.collection('CONTROLE').doc(\"TRANSACTIONS\").collection(\"NG_TICKET\")\r\n                        .where('codebus', '==', codeBus)\r\n                        .get();\r\n                    \r\n                    // Retourne uniquement le nombre de places prises\r\n                    return { placesPrises: transactionsSnapshot.size };\r\n                } catch (error) {\r\n                    console.error('Erreur lors de la récupération des statistiques:', error);\r\n                    return { placesPrises: 0 };\r\n                }\r\n            }\r\n\r\n\r\n            // Parcourir les dates triées et afficher les bus correspondants\r\n            for (const [dateVoyage, buses] of datesTriees) {\r\n                const dateFormatee = formaterDateAvecJour(dateVoyage);\r\n                busHTML += `\r\n                    <div class=\"date-section\">\r\n                        <span>${dateFormatee}</span>\r\n                        <span class=\"badge\">${buses.length} bus</span>\r\n                    </div>\r\n                    <div class=\"bus-list\">\r\n                        <div class=\"bus-list-content\">\r\n                            <table class=\"bus-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Agences</th>\r\n                                        <th>N° Bus</th>\r\n                                        <th>Etat ticket</th>\r\n                                        <th>Nom chauffeur</th>\r\n                                        <th>Immatriculation</th>\r\n                                        <th>Ville Départ</th>\r\n                                        <th>Quartier Départ</th>\r\n                                        <th>Ville arrivée</th>\r\n                                        <th>Quartier arrivée</th>\r\n                                        <th>Heure Départ</th>\r\n                                        <th>Places disponibles</th>\r\n                                        <th>Places prises</th>\r\n                                        <th>Places restantes</th>\r\n                                        <th>Prix du ticket</th>\r\n                                        <th>Montant total</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>`;\r\n\r\n                // Utiliser Promise.all pour attendre toutes les requêtes asynchrones\r\n                const busesWithStats = await Promise.all(buses.map(async (bus) => {\r\n                    const stats = await getBusStatistics(bus.id, bus.motpassebus || '');\r\n                    return { ...bus, ...stats };\r\n                }));\r\n\r\n                busesWithStats.forEach(bus => {\r\n                    const placesRestantes = Math.max(0, (bus.nombre_siege || 0) - (bus.placesPrises || 0));\r\n                    \r\n                    busHTML += `\r\n                                    <tr id=\"bus-${bus.id}\">\r\n                                        <td>${bus.nomagence || 'N/A'}</td>\r\n                                        <td>${bus.numerobus || 'N/A'}</td>\r\n                                        <td>${bus.etat || 'N/A'}</td>\r\n                                        <td>${bus.chauffeur || 'N/A'}</td>\r\n                                        <td>${bus.immatriculation || 'N/A'}</td>\r\n                                        <td>${bus.ville_depart || 'N/A'}</td>\r\n                                        <td>${bus.quartier_depart || 'N/A'}</td>\r\n                                        <td>${bus.ville_arriver || 'N/A'}</td>\r\n                                        <td>${bus.quartier_arriver || 'N/A'}</td>\r\n                                        <td>${bus.heure_depart || 'N/A'}</td>\r\n                                        <td>${bus.nombre_siege || '0'}</td>\r\n                                        <td>${bus.placesPrises || '0'}</td>\r\n                                        <td>${placesRestantes || '0'}</td>\r\n                                        <td>${bus.prix_ticket || '0'} FCFA</td>\r\n                                        <td>${(bus.placesPrises * (parseFloat(bus.prix_ticket) || 0)).toFixed(2)} FCFA</td>\r\n                                        <td class=\"actions-cell\">\r\n                                            <button class=\"btn-view\" onclick=\"toggleVoyageurs('${bus.id}', '${bus.motpassebus}')\">\r\n                                                <i class=\"fas fa-users\"></i> Voir voyageurs\r\n                                            </button>\r\n                                            <button class=\"btn-delete\" onclick=\"supprimerBus('${bus.id}', '${parseInt(bus.motpassebus)}')\">\r\n                                                <i class=\"fas fa-trash\"></i> Supprimer\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>`;\r\n                });\r\n\r\n                busHTML += `\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>`;\r\n            }\r\n\r\n            container.innerHTML = busHTML;\r\n        } catch (error) {\r\n            console.error('Erreur lors du chargement des bus:', error);\r\n            container.innerHTML = '<div class=\"error\">Erreur lors du chargement des bus</div>';\r\n        }\r\n    }\r\n\r\n    // Fonction pour afficher les agences avec leurs destinations correspondantes\r\n    async function displayAgences() {\r\n        try {\r\n            // Afficher le chargement\r\n            agencesList.innerHTML = `\r\n                <div class=\"loading\">\r\n                    <i class=\"fas fa-spinner\"></i> Chargement des agences...\r\n                </div>`;\r\n\r\n            // Récupérer toutes les agences\r\n            const agencesSnapshot = await db.collection('CONTROLE').doc(\"AGENCES\").collection(\"NG_TICKET\").get();\r\n            \r\n            if (agencesSnapshot.empty) {\r\n                agencesList.innerHTML = '<div class=\"error-message\">Aucune agence trouvée</div>';\r\n                return;\r\n            }\r\n\r\n            // Récupérer toutes les destinations\r\n            const destinationsSnapshot = await db.collection('CONTROLE').doc(\"DESTINATION\").collection(\"NG_TRAVEL\").get();\r\n            \r\n            // Créer une map des destinations groupées par uid\r\n            const destinationsMap = new Map();\r\n            destinationsSnapshot.forEach(doc => {\r\n                const data = doc.data();\r\n                if (data.uid) {\r\n                    if (!destinationsMap.has(data.uid)) {\r\n                        destinationsMap.set(data.uid, []);\r\n                    }\r\n                    destinationsMap.get(data.uid).push({\r\n                        ville1: data.ville1 || 'Non spécifiée',\r\n                        quartier1: data.quartier1 || 'Non spécifié',\r\n                        id: doc.id\r\n                    });\r\n                }\r\n            });\r\n\r\n            // Vider la liste\r\n            agencesList.innerHTML = '';\r\n            let hasMatchingAgences = false;\r\n\r\n            // Parcourir toutes les agences\r\n            agencesSnapshot.forEach(doc => {\r\n                const agenceData = doc.data();\r\n                \r\n                // Vérifier si l'agence a des destinations\r\n                if (agenceData.uid && destinationsMap.has(agenceData.uid)) {\r\n                    hasMatchingAgences = true;\r\n                    const destinations = destinationsMap.get(agenceData.uid);\r\n                    \r\n                    // Créer la carte d'agence\r\n                    const agenceCard = document.createElement('div');\r\n                    agenceCard.className = 'agence-card';\r\n                    \r\n                    // Créer le contenu de la carte avec toutes les destinations\r\n                    let destinationsHTML = '';\r\n                    destinations.forEach(dest => {\r\n                        const containerId = `bus-container-${dest.id.replace(/\\s+/g, '-')}`;\r\n                        console.log('Création du conteneur pour la destination:', dest.ville1, dest.quartier1, 'ID:', containerId);\r\n                        \r\n                        destinationsHTML += `\r\n                            <div class=\"destination-item\">\r\n                                <div class=\"destination-header\" data-destination-id=\"${dest.id}\">\r\n                                    <i class=\"fas fa-map-marker-alt\"></i>\r\n                                    <span>${dest.ville1}, ${dest.quartier1}</span>\r\n                                    <i class=\"fas fa-chevron-down arrow\"></i>\r\n                                </div>\r\n                                <div id=\"${containerId}\" class=\"bus-container\">\r\n                                    <div class=\"loading-bus\">\r\n                                        <i class=\"fas fa-spinner fa-spin\"></i> Chargement des bus...\r\n                                    </div>\r\n                                </div>\r\n                            </div>`;\r\n                    });\r\n                    \r\n                    agenceCard.innerHTML = `\r\n                        <div class=\"agence-header\">\r\n                            <div class=\"agence-name\">\r\n                                <i class=\"fas fa-building\"></i>\r\n                                ${agenceData.agence || 'Nom non disponible'}\r\n                            </div>\r\n                            <div class=\"destinations-list\">\r\n                                ${destinationsHTML}\r\n                            </div>\r\n                        </div>\r\n                    `;\r\n                    \r\n                    agencesList.appendChild(agenceCard);\r\n                    \r\n                    // Ajouter les écouteurs d'événements après l'insertion dans le DOM\r\n                    destinations.forEach(dest => {\r\n                        const containerId = `bus-container-${dest.id.replace(/\\s+/g, '-')}`;\r\n                        const container = document.getElementById(containerId);\r\n                        const header = container ? container.previousElementSibling : null;\r\n                        \r\n                        if (!container || !header) {\r\n                            console.error('Élément non trouvé pour la destination:', dest.id);\r\n                            return;\r\n                        }\r\n                        \r\n                        // Supprimer d'abord les anciens écouteurs\r\n                        const newHeader = header.cloneNode(true);\r\n                        header.parentNode.replaceChild(newHeader, header);\r\n                        \r\n                        // Ajouter le nouvel écouteur d'événement\r\n                        newHeader.addEventListener('click', async function(e) {\r\n                            console.log('Clic sur la destination:', dest.id);\r\n                            e.stopPropagation();\r\n                            \r\n                            // Basculer la classe show\r\n                            container.classList.toggle('show');\r\n                            \r\n                            // Si le conteneur est visible et vide, charger les bus\r\n                            if (container.classList.contains('show') && container.children.length === 1) {\r\n                                console.log('Chargement des bus pour:', dest.ville1, dest.quartier1);\r\n                                try {\r\n                                    await afficherBus(dest.id, container);\r\n                                } catch (error) {\r\n                                    console.error('Erreur lors du chargement des bus:', error);\r\n                                    container.innerHTML = '<div class=\"error\">Erreur lors du chargement des bus</div>';\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n\r\n            // Afficher un message si aucune correspondance n'a été trouvée\r\n            if (!hasMatchingAgences) {\r\n                agencesList.innerHTML = '<div class=\"error-message\">Aucune agence avec destination correspondante trouvée</div>';\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Erreur lors du chargement des agences:\", error);\r\n            agencesList.innerHTML = `\r\n                <div class=\"error-message\">\r\n                    <i class=\"fas fa-exclamation-circle\"></i>\r\n                    Une erreur est survenue lors du chargement des agences. Veuillez réessayer.\r\n                </div>`;\r\n        }\r\n    }\r\n\r\n    // Gestion du menu mobile\r\n    if (mobileMenuBtn && navLinks) {\r\n        mobileMenuBtn.addEventListener('click', function() {\r\n            this.classList.toggle('active');\r\n            navLinks.classList.toggle('active');\r\n            \r\n            if (navLinks.classList.contains('active')) {\r\n                document.body.style.overflow = 'hidden';\r\n            } else {\r\n                document.body.style.overflow = '';\r\n            }\r\n        });\r\n\r\n        // Fermer le menu lors du clic sur un lien\r\n        document.querySelectorAll('.nav-links a').forEach(link => {\r\n            link.addEventListener('click', () => {\r\n                if (navLinks.classList.contains('active')) {\r\n                    mobileMenuBtn.classList.remove('active');\r\n                    navLinks.classList.remove('active');\r\n                    document.body.style.overflow = '';\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Charger les agences au démarrage\r\n    displayAgences();\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHJhY2FiaWxpdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25nX3RyYXZlbC8uL3NyYy90cmFjYWJpbGl0ZS5qcz9mYzgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvbmZpZ3VyYXRpb24gRmlyZWJhc2UgKMOgIHJlbXBsYWNlciBwYXIgdm90cmUgY29uZmlndXJhdGlvbilcclxuY29uc3QgZmlyZWJhc2VDb25maWcgPSB7XHJcbiAgICBhcGlLZXk6IFwiQUl6YVN5Q0ZFUk1FOEN5SDA5TFdHbmIwdE9vLVdFWlphQjNZZ29JXCIsXHJcbiAgICBhdXRoRG9tYWluOiBcInZveWFnZS1lc3NhaWUuZmlyZWJhc2VhcHAuY29tXCIsXHJcbiAgICBkYXRhYmFzZVVSTDogXCJodHRwczovL3ZveWFnZS1lc3NhaWUtZGVmYXVsdC1ydGRiLmZpcmViYXNlaW8uY29tXCIsXHJcbiAgICBwcm9qZWN0SWQ6IFwidm95YWdlLWVzc2FpZVwiLFxyXG4gICAgc3RvcmFnZUJ1Y2tldDogXCJ2b3lhZ2UtZXNzYWllLmZpcmViYXNlc3RvcmFnZS5hcHBcIixcclxuICAgIG1lc3NhZ2luZ1NlbmRlcklkOiBcIjUzNDYwMDY3ODIwNFwiLFxyXG4gICAgYXBwSWQ6IFwiMTo1MzQ2MDA2NzgyMDQ6d2ViOjA3OGI0OTZmYTE3OGZhZjQwYmZjMzlcIlxyXG59O1xyXG5cclxuLy8gSW5pdGlhbGlzYXRpb24gZGUgRmlyZWJhc2VcclxuaWYgKCFmaXJlYmFzZS5hcHBzLmxlbmd0aCkge1xyXG4gICAgZmlyZWJhc2UuaW5pdGlhbGl6ZUFwcChmaXJlYmFzZUNvbmZpZyk7XHJcbn1cclxuXHJcbmNvbnN0IGRiID0gZmlyZWJhc2UuZmlyZXN0b3JlKCk7XHJcblxyXG4vLyBGb25jdGlvbiBwb3VyIGFmZmljaGVyL21hc3F1ZXIgbGVzIGTDqXRhaWxzIGRlcyB2b3lhZ2V1cnNcclxuYXN5bmMgZnVuY3Rpb24gdG9nZ2xlVm95YWdldXJzKGJ1c0lkLCBjb2RlYnVzKSB7XHJcbiAgICAvLyBWw6lyaWZpZXIgc2kgbGEgbGlnbmUgZGUgZMOpdGFpbHMgZXhpc3RlIGTDqWrDoFxyXG4gICAgY29uc3QgZXhpc3RpbmdEZXRhaWxzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYGRldGFpbHMtJHtidXNJZH1gKTtcclxuICAgIGlmIChleGlzdGluZ0RldGFpbHMpIHtcclxuICAgICAgICBleGlzdGluZ0RldGFpbHMucmVtb3ZlKCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEFmZmljaGVyIGxlIGNoYXJnZW1lbnRcclxuICAgIGNvbnN0IGxvYWRpbmdSb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpO1xyXG4gICAgbG9hZGluZ1Jvdy5pZCA9IGBkZXRhaWxzLSR7YnVzSWR9YDtcclxuICAgIGxvYWRpbmdSb3cuaW5uZXJIVE1MID0gYDx0ZCBjb2xzcGFuPVwiMTVcIiBjbGFzcz1cImxvYWRpbmctZGV0YWlsc1wiPjxpIGNsYXNzPVwiZmFzIGZhLXNwaW5uZXIgZmEtc3BpblwiPjwvaT4gQ2hhcmdlbWVudCBkZXMgdm95YWdldXJzLi4uPC90ZD5gO1xyXG4gICAgXHJcbiAgICAvLyBJbnPDqXJlciBsYSBsaWduZSBkZSBjaGFyZ2VtZW50XHJcbiAgICBjb25zdCBidXNSb3cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgYnVzLSR7YnVzSWR9YCk7XHJcbiAgICBidXNSb3cucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobG9hZGluZ1JvdywgYnVzUm93Lm5leHRTaWJsaW5nKTtcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIC8vIFLDqWN1cMOpcmVyIGxlcyB0cmFuc2FjdGlvbnMgcG91ciBjZSBidXNcclxuICAgICAgICBjb25zdCB0cmFuc2FjdGlvbnNSZWYgPSBkYi5jb2xsZWN0aW9uKCdUUkFOU0FDVElPTlMnKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBSZXF1w6p0ZSB1bmlxdWUgc3VyIGxlIGNoYW1wIGNvZGVidXMgcXVpIGNvcnJlc3BvbmQgw6AgbW90cGFzc2VidXNcclxuICAgICAgICBjb25zdCBxdWVyeVNuYXBzaG90ID0gYXdhaXQgdHJhbnNhY3Rpb25zUmVmLndoZXJlKCdjb2RlYnVzJywgJz09JywgcGFyc2VJbnQoY29kZWJ1cykpLmdldCgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIENyw6llciBsYSBsaWduZSBkZSBkw6l0YWlsc1xyXG4gICAgICAgIGNvbnN0IGRldGFpbHNSb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpO1xyXG4gICAgICAgIGRldGFpbHNSb3cuaWQgPSBgZGV0YWlscy0ke2J1c0lkfWA7XHJcbiAgICAgICAgZGV0YWlsc1Jvdy5jbGFzc05hbWUgPSAndm95YWdldXJzLWRldGFpbHMnO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChxdWVyeVNuYXBzaG90LmVtcHR5KSB7XHJcbiAgICAgICAgICAgIGRldGFpbHNSb3cuaW5uZXJIVE1MID0gYFxyXG4gICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XCIxNVwiIGNsYXNzPVwibm8tdm95YWdldXJzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtaW5mby1jaXJjbGVcIj48L2k+IEF1Y3VuIHZveWFnZXVyIHRyb3V2w6kgcG91ciBjZSBidXMuXHJcbiAgICAgICAgICAgICAgICA8L3RkPmA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gQ3LDqWVyIGxlIGNvbnRlbnUgZHUgdGFibGVhdSBkZXMgdm95YWdldXJzXHJcbiAgICAgICAgICAgIGxldCB2b3lhZ2V1cnNIVE1MID0gYFxyXG4gICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XCIxNVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2b3lhZ2V1cnMtY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxoND5MaXN0ZSBkZXMgdm95YWdldXJzICgke3F1ZXJ5U25hcHNob3Quc2l6ZX0pPC9oND5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVwidm95YWdldXJzLXRhYmxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+Q29kZSBCdXM8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+Q29kZSBUaWNrZXQ8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+QWdlbmNlPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPkRhdGUgZCdhY2hhdDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+YDtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIFBhcmNvdXJpciBsZXMgdHJhbnNhY3Rpb25zIGV0IGFqb3V0ZXIgY2hhcXVlIHZveWFnZXVyXHJcbiAgICAgICAgICAgIHF1ZXJ5U25hcHNob3QuZm9yRWFjaChkb2MgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IGRvYy5kYXRhKCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRlQWNoYXQgPSBkYXRhLnRpbWVzdGFtcCA/IG5ldyBEYXRlKGRhdGEudGltZXN0YW1wLnNlY29uZHMgKiAxMDAwKS50b0xvY2FsZVN0cmluZygpIDogJ04vQSc7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIHZveWFnZXVyc0hUTUwgKz0gYFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiR7ZGF0YS5jb2RlYnVzIHx8ICdOL0EnfTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4ke2RhdGEudGlja2V0Q29kZSB8fCAnTi9BJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtkYXRhLm5vbWFnZW5jZSB8fCAnTi9BJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtkYXRlQWNoYXR9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPmA7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdm95YWdldXJzSFRNTCArPSBgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC90ZD5gO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgZGV0YWlsc1Jvdy5pbm5lckhUTUwgPSB2b3lhZ2V1cnNIVE1MO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAvLyBSZW1wbGFjZXIgbGEgbGlnbmUgZGUgY2hhcmdlbWVudCBwYXIgbGVzIGTDqXRhaWxzXHJcbiAgICAgICAgbG9hZGluZ1Jvdy5yZXBsYWNlV2l0aChkZXRhaWxzUm93KTtcclxuICAgICAgICBcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyZXVyIGxvcnMgZGUgbGEgcsOpY3Vww6lyYXRpb24gZGVzIHZveWFnZXVyczonLCBlcnJvcik7XHJcbiAgICAgICAgbG9hZGluZ1Jvdy5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVwiMTVcIiBjbGFzcz1cImVycm9yLWRldGFpbHNcIj5cclxuICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWV4Y2xhbWF0aW9uLXRyaWFuZ2xlXCI+PC9pPiBFcnJldXIgbG9ycyBkdSBjaGFyZ2VtZW50IGRlcyB2b3lhZ2V1cnMuXHJcbiAgICAgICAgICAgIDwvdGQ+YDtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi8vIEZvbmN0aW9uIHBvdXIgc3VwcHJpbWVyIHVuIGJ1cyBldCBzZXMgdHJhbnNhY3Rpb25zIGFzc29jacOpZXNcclxuYXN5bmMgZnVuY3Rpb24gc3VwcHJpbWVyQnVzKGJ1c0lkLCBtb3RwYXNzZWJ1cykge1xyXG4gICAgaWYgKCFjb25maXJtKCfDinRlcy12b3VzIHPDu3IgZGUgdm91bG9pciBzdXBwcmltZXIgY2UgYnVzIGV0IHRvdXMgbGVzIGJpbGxldHMgYXNzb2Npw6lzID8nKSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIC8vIFN1cHByaW1lciBkJ2Fib3JkIGxlcyB0cmFuc2FjdGlvbnMgYXNzb2Npw6llc1xyXG4gICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uc1JlZiA9IGRiLmNvbGxlY3Rpb24oJ0NPTlRST0xFJykuZG9jKCdUUkFOU0FDVElPTlMnKS5jb2xsZWN0aW9uKCdOR19USUNLRVQnKTtcclxuICAgICAgICBjb25zdCBxdWVyeVNuYXBzaG90ID0gYXdhaXQgdHJhbnNhY3Rpb25zUmVmLndoZXJlKCdjb2RlYnVzJywgJz09JywgcGFyc2VJbnQobW90cGFzc2VidXMpKS5nZXQoKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBTdXBwcmltZXIgdG91cyBsZXMgZG9jdW1lbnRzIGNvcnJlc3BvbmRhbnRzXHJcbiAgICAgICAgY29uc3QgYmF0Y2ggPSBkYi5iYXRjaCgpO1xyXG4gICAgICAgIHF1ZXJ5U25hcHNob3QuZm9yRWFjaCgoZG9jKSA9PiB7XHJcbiAgICAgICAgICAgIGJhdGNoLmRlbGV0ZShkb2MucmVmKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBFeMOpY3V0ZXIgbGEgc3VwcHJlc3Npb24gZW4gbG90XHJcbiAgICAgICAgYXdhaXQgYmF0Y2guY29tbWl0KCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coYCR7cXVlcnlTbmFwc2hvdC5zaXplfSB0cmFuc2FjdGlvbnMgc3VwcHJpbcOpZXMgcG91ciBsZSBidXMgJHttb3RwYXNzZWJ1c31gKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBFbnN1aXRlLCBzdXBwcmltZXIgbGUgYnVzXHJcbiAgICAgICAgYXdhaXQgZGIuY29sbGVjdGlvbignQ09OVFJPTEUnKS5kb2MoJ0JVUycpLmNvbGxlY3Rpb24oJ05HX1RJQ0tFVCcpLmRvYyhidXNJZCkuZGVsZXRlKCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0J1cyBzdXBwcmltw6kgYXZlYyBzdWNjw6hzJyk7XHJcbiAgICAgICAgYWxlcnQoJ0xlIGJ1cyBldCB0b3VzIGxlcyBiaWxsZXRzIGFzc29jacOpcyBvbnQgw6l0w6kgc3VwcHJpbcOpcyBhdmVjIHN1Y2PDqHMnKTtcclxuICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgfSwgNDAwMCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0VycmV1ciBsb3JzIGRlIGxhIHN1cHByZXNzaW9uOicsIGVycm9yKTtcclxuICAgICAgICBhbGVydCgnVW5lIGVycmV1ciBlc3Qgc3VydmVudWUgbG9ycyBkZSBsYSBzdXBwcmVzc2lvbi4gVmV1aWxsZXogcsOpZXNzYXllci4nKTtcclxuICAgIH1cclxufVxyXG4vLyBFeHBvc2VyIGxlcyBmb25jdGlvbnMgYXUgc2NvcGUgZ2xvYmFsXHJcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgd2luZG93LnRvZ2dsZVZveWFnZXVycyA9IHRvZ2dsZVZveWFnZXVycztcclxuICAgIHdpbmRvdy5zdXBwcmltZXJCdXMgPSBzdXBwcmltZXJCdXM7XHJcbn1cclxuXHJcbi8vIEV4cG9ydGVyIHBvdXIgbGVzIG1vZHVsZXMgRVM2XHJcbmV4cG9ydCB7IHRvZ2dsZVZveWFnZXVycywgc3VwcHJpbWVyQnVzIH07XHJcblxyXG4vLyBTdHlsZSBwb3VyIGxlcyBkw6l0YWlscyBkZXMgdm95YWdldXJzXHJcbmNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcclxuc3R5bGUudGV4dENvbnRlbnQgPSBgXHJcbiAgICAvKiBTdHlsZSBwb3VyIGxlcyBkw6l0YWlscyBkZXMgdm95YWdldXJzICovXHJcbiAgICAudm95YWdldXJzLWRldGFpbHMge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC52b3lhZ2V1cnMtZGV0YWlscyB0ZCB7XHJcbiAgICAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC52b3lhZ2V1cnMtY29udGFpbmVyIHtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC52b3lhZ2V1cnMtdGFibGUge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLnZveWFnZXVycy10YWJsZSB0aCwgXHJcbiAgICAudm95YWdldXJzLXRhYmxlIHRkIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAudm95YWdldXJzLXRhYmxlIHRoIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAudm95YWdldXJzLXRhYmxlIHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLnZveWFnZXVycy10YWJsZSB0cjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmxvYWRpbmctZGV0YWlscywgXHJcbiAgICAubm8tdm95YWdldXJzLFxyXG4gICAgLmVycm9yLWRldGFpbHMge1xyXG4gICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGNvbG9yOiAjNjY2O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuZXJyb3ItZGV0YWlscyB7XHJcbiAgICAgICAgY29sb3I6ICNkMzJmMmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC52b3lhZ2V1cnMtY29udGFpbmVyIGg0IHtcclxuICAgICAgICBtYXJnaW46IDAgMCAxMHB4IDA7XHJcbiAgICAgICAgY29sb3I6ICMzMzM7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICB9XHJcbmA7XHJcbmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkge1xyXG4gICAgLy8gw4lsw6ltZW50cyBkdSBET01cclxuICAgIGNvbnN0IGFnZW5jZXNMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FnZW5jZXMtbGlzdCcpO1xyXG4gICAgY29uc3QgbW9iaWxlTWVudUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb2JpbGUtbWVudScpO1xyXG4gICAgY29uc3QgbmF2TGlua3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmF2LWxpbmtzJyk7XHJcblxyXG4gICAgICAgIC8vIExhIGZvbmN0aW9uIHN1cHByaW1lckJ1cyBlc3QgbWFpbnRlbmFudCBkw6lmaW5pZSBkYW5zIGxhIHBvcnTDqWUgZ2xvYmFsZVxyXG5cclxuICAgIC8vIEZvbmN0aW9uIHBvdXIgYWZmaWNoZXIgbGEgbGlzdGUgZGVzIGJ1cyBwb3VyIHVuZSBkZXN0aW5hdGlvblxyXG4gICAgYXN5bmMgZnVuY3Rpb24gYWZmaWNoZXJCdXMoZGVzdGluYXRpb25JZCwgY29udGFpbmVyKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgLy8gQWZmaWNoZXIgbGUgY2hhcmdlbWVudFxyXG4gICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9XCJsb2FkaW5nLWJ1c1wiPjxpIGNsYXNzPVwiZmFzIGZhLXNwaW5uZXIgZmEtc3BpblwiPjwvaT4gQ2hhcmdlbWVudCBkZXMgYnVzLi4uPC9kaXY+JztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIFLDqWN1cMOpcmVyIGQnYWJvcmQgbGVzIGluZm9ybWF0aW9ucyBkZSBsYSBkZXN0aW5hdGlvblxyXG4gICAgICAgICAgICBjb25zdCBkZXN0aW5hdGlvbkRvYyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ0NPTlRST0xFJykuZG9jKCdERVNUSU5BVElPTicpLmNvbGxlY3Rpb24oJ05HX1RSQVZFTCcpLmRvYyhkZXN0aW5hdGlvbklkKS5nZXQoKTtcclxuICAgICAgICAgICAgaWYgKCFkZXN0aW5hdGlvbkRvYy5leGlzdHMpIHtcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cIm5vLWJ1c1wiPkRlc3RpbmF0aW9uIG5vbiB0cm91dsOpZTwvZGl2Pic7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgZGVzdGluYXRpb24gPSBkZXN0aW5hdGlvbkRvYy5kYXRhKCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnUmVjaGVyY2hlIGRlcyBidXMgcG91cjonLCBkZXN0aW5hdGlvbi52aWxsZTEsIGRlc3RpbmF0aW9uLnF1YXJ0aWVyMSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyBSw6ljdXDDqXJlciBsZXMgYnVzIGNvcnJlc3BvbmRhbnQgw6AgY2V0dGUgZGVzdGluYXRpb25cclxuICAgICAgICAgICAgY29uc3QgYnVzU25hcHNob3QgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdDT05UUk9MRScpLmRvYygnQlVTJykuY29sbGVjdGlvbignTkdfVElDS0VUJylcclxuICAgICAgICAgICAgICAgIC53aGVyZSgndmlsbGVfZGVwYXJ0JywgJz09JywgZGVzdGluYXRpb24udmlsbGUxKVxyXG4gICAgICAgICAgICAgICAgLndoZXJlKCdxdWFydGllcl9kZXBhcnQnLCAnPT0nLCBkZXN0aW5hdGlvbi5xdWFydGllcjEpXHJcbiAgICAgICAgICAgICAgICAuZ2V0KCk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ05vbWJyZSBkZSBidXMgdHJvdXbDqXM6JywgYnVzU25hcHNob3Quc2l6ZSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoYnVzU25hcHNob3QuZW1wdHkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5vLWJ1c1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBBdWN1biBidXMgcHJvZ3JhbW3DqSBwb3VyICR7ZGVzdGluYXRpb24udmlsbGUxfSwgJHtkZXN0aW5hdGlvbi5xdWFydGllcjF9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+YDtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gRm9uY3Rpb24gcG91ciBmb3JtYXRlciBsYSBkYXRlIGF2ZWMgbGUgam91ciBkZSBsYSBzZW1haW5lXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGZvcm1hdGVyRGF0ZUF2ZWNKb3VyKGRhdGVTdHIpIHtcclxuICAgICAgICAgICAgICAgIGlmICghZGF0ZVN0cikgcmV0dXJuICdEYXRlIG5vbiBzcMOpY2lmacOpZSc7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7IHdlZWtkYXk6ICdsb25nJywgeWVhcjogJ251bWVyaWMnLCBtb250aDogJ2xvbmcnLCBkYXk6ICdudW1lcmljJyB9O1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0ZVN0cik7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gVsOpcmlmaWVyIHNpIGxhIGRhdGUgZXN0IHZhbGlkZVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc05hTihkYXRlLmdldFRpbWUoKSkpIHJldHVybiBkYXRlU3RyO1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIE1ldHRyZSBlbiBtYWp1c2N1bGUgbGEgcHJlbWnDqHJlIGxldHRyZSBkdSBqb3VyXHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0ZUZvcm1hdGVlID0gZGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoJ2ZyLUZSJywgb3B0aW9ucyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGVGb3JtYXRlZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGRhdGVGb3JtYXRlZS5zbGljZSgxKTtcclxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0ZVN0cjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gR3JvdXBlciBsZXMgYnVzIHBhciBkYXRlIGRlIHZveWFnZVxyXG4gICAgICAgICAgICBjb25zdCBidXNlc1BhckRhdGUgPSB7fTtcclxuICAgICAgICAgICAgYnVzU25hcHNob3QuZm9yRWFjaChkb2MgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYnVzID0gZG9jLmRhdGEoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGVWb3lhZ2UgPSBidXMuZGF0ZV92b3lhZ2UgfHwgJ0RhdGUgbm9uIHNww6ljaWZpw6llJztcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgaWYgKCFidXNlc1BhckRhdGVbZGF0ZVZveWFnZV0pIHtcclxuICAgICAgICAgICAgICAgICAgICBidXNlc1BhckRhdGVbZGF0ZVZveWFnZV0gPSBbXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGJ1c2VzUGFyRGF0ZVtkYXRlVm95YWdlXS5wdXNoKHsgaWQ6IGRvYy5pZCwgLi4uYnVzIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBidXNIVE1MID0gJyc7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyBUcmllciBsZXMgZGF0ZXMgcGFyIG9yZHJlIGNocm9ub2xvZ2lxdWVcclxuICAgICAgICAgICAgY29uc3QgZGF0ZXNUcmllZXMgPSBPYmplY3QuZW50cmllcyhidXNlc1BhckRhdGUpLnNvcnQoKGEsIGIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZShhWzBdKSAtIG5ldyBEYXRlKGJbMF0pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIEZvbmN0aW9uIHBvdXIgcsOpY3Vww6lyZXIgbGVzIHN0YXRpc3RpcXVlcyBkZXMgcGxhY2VzIHByaXNlc1xyXG4gICAgICAgICAgICBhc3luYyBmdW5jdGlvbiBnZXRCdXNTdGF0aXN0aWNzKGJ1c0lkLCBjb2RlQnVzKSB7XHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uc1NuYXBzaG90ID0gYXdhaXQgZGIuY29sbGVjdGlvbignQ09OVFJPTEUnKS5kb2MoXCJUUkFOU0FDVElPTlNcIikuY29sbGVjdGlvbihcIk5HX1RJQ0tFVFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAud2hlcmUoJ2NvZGVidXMnLCAnPT0nLCBjb2RlQnVzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuZ2V0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gUmV0b3VybmUgdW5pcXVlbWVudCBsZSBub21icmUgZGUgcGxhY2VzIHByaXNlc1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHBsYWNlc1ByaXNlczogdHJhbnNhY3Rpb25zU25hcHNob3Quc2l6ZSB9O1xyXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJldXIgbG9ycyBkZSBsYSByw6ljdXDDqXJhdGlvbiBkZXMgc3RhdGlzdGlxdWVzOicsIGVycm9yKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBwbGFjZXNQcmlzZXM6IDAgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgIC8vIFBhcmNvdXJpciBsZXMgZGF0ZXMgdHJpw6llcyBldCBhZmZpY2hlciBsZXMgYnVzIGNvcnJlc3BvbmRhbnRzXHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2RhdGVWb3lhZ2UsIGJ1c2VzXSBvZiBkYXRlc1RyaWVlcykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0ZUZvcm1hdGVlID0gZm9ybWF0ZXJEYXRlQXZlY0pvdXIoZGF0ZVZveWFnZSk7XHJcbiAgICAgICAgICAgICAgICBidXNIVE1MICs9IGBcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0ZS1zZWN0aW9uXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPiR7ZGF0ZUZvcm1hdGVlfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJiYWRnZVwiPiR7YnVzZXMubGVuZ3RofSBidXM8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ1cy1saXN0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidXMtbGlzdC1jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9XCJidXMtdGFibGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5BZ2VuY2VzPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5OwrAgQnVzPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5FdGF0IHRpY2tldDwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+Tm9tIGNoYXVmZmV1cjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+SW1tYXRyaWN1bGF0aW9uPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5WaWxsZSBEw6lwYXJ0PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5RdWFydGllciBEw6lwYXJ0PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5WaWxsZSBhcnJpdsOpZTwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+UXVhcnRpZXIgYXJyaXbDqWU8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPkhldXJlIETDqXBhcnQ8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlBsYWNlcyBkaXNwb25pYmxlczwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+UGxhY2VzIHByaXNlczwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+UGxhY2VzIHJlc3RhbnRlczwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+UHJpeCBkdSB0aWNrZXQ8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPk1vbnRhbnQgdG90YWw8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPkFjdGlvbnM8L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PmA7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gVXRpbGlzZXIgUHJvbWlzZS5hbGwgcG91ciBhdHRlbmRyZSB0b3V0ZXMgbGVzIHJlcXXDqnRlcyBhc3luY2hyb25lc1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYnVzZXNXaXRoU3RhdHMgPSBhd2FpdCBQcm9taXNlLmFsbChidXNlcy5tYXAoYXN5bmMgKGJ1cykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gYXdhaXQgZ2V0QnVzU3RhdGlzdGljcyhidXMuaWQsIGJ1cy5tb3RwYXNzZWJ1cyB8fCAnJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgLi4uYnVzLCAuLi5zdGF0cyB9O1xyXG4gICAgICAgICAgICAgICAgfSkpO1xyXG5cclxuICAgICAgICAgICAgICAgIGJ1c2VzV2l0aFN0YXRzLmZvckVhY2goYnVzID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBwbGFjZXNSZXN0YW50ZXMgPSBNYXRoLm1heCgwLCAoYnVzLm5vbWJyZV9zaWVnZSB8fCAwKSAtIChidXMucGxhY2VzUHJpc2VzIHx8IDApKTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBidXNIVE1MICs9IGBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIGlkPVwiYnVzLSR7YnVzLmlkfVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiR7YnVzLm5vbWFnZW5jZSB8fCAnTi9BJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiR7YnVzLm51bWVyb2J1cyB8fCAnTi9BJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiR7YnVzLmV0YXQgfHwgJ04vQSd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4ke2J1cy5jaGF1ZmZldXIgfHwgJ04vQSd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4ke2J1cy5pbW1hdHJpY3VsYXRpb24gfHwgJ04vQSd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4ke2J1cy52aWxsZV9kZXBhcnQgfHwgJ04vQSd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4ke2J1cy5xdWFydGllcl9kZXBhcnQgfHwgJ04vQSd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4ke2J1cy52aWxsZV9hcnJpdmVyIHx8ICdOL0EnfTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtidXMucXVhcnRpZXJfYXJyaXZlciB8fCAnTi9BJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiR7YnVzLmhldXJlX2RlcGFydCB8fCAnTi9BJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiR7YnVzLm5vbWJyZV9zaWVnZSB8fCAnMCd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4ke2J1cy5wbGFjZXNQcmlzZXMgfHwgJzAnfTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtwbGFjZXNSZXN0YW50ZXMgfHwgJzAnfTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+JHtidXMucHJpeF90aWNrZXQgfHwgJzAnfSBGQ0ZBPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4keyhidXMucGxhY2VzUHJpc2VzICogKHBhcnNlRmxvYXQoYnVzLnByaXhfdGlja2V0KSB8fCAwKSkudG9GaXhlZCgyKX0gRkNGQTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJhY3Rpb25zLWNlbGxcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuLXZpZXdcIiBvbmNsaWNrPVwidG9nZ2xlVm95YWdldXJzKCcke2J1cy5pZH0nLCAnJHtidXMubW90cGFzc2VidXN9JylcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtdXNlcnNcIj48L2k+IFZvaXIgdm95YWdldXJzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0bi1kZWxldGVcIiBvbmNsaWNrPVwic3VwcHJpbWVyQnVzKCcke2J1cy5pZH0nLCAnJHtwYXJzZUludChidXMubW90cGFzc2VidXMpfScpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLXRyYXNoXCI+PC9pPiBTdXBwcmltZXJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+YDtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIGJ1c0hUTUwgKz0gYFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gYnVzSFRNTDtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJldXIgbG9ycyBkdSBjaGFyZ2VtZW50IGRlcyBidXM6JywgZXJyb3IpO1xyXG4gICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9XCJlcnJvclwiPkVycmV1ciBsb3JzIGR1IGNoYXJnZW1lbnQgZGVzIGJ1czwvZGl2Pic7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEZvbmN0aW9uIHBvdXIgYWZmaWNoZXIgbGVzIGFnZW5jZXMgYXZlYyBsZXVycyBkZXN0aW5hdGlvbnMgY29ycmVzcG9uZGFudGVzXHJcbiAgICBhc3luYyBmdW5jdGlvbiBkaXNwbGF5QWdlbmNlcygpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAvLyBBZmZpY2hlciBsZSBjaGFyZ2VtZW50XHJcbiAgICAgICAgICAgIGFnZW5jZXNMaXN0LmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsb2FkaW5nXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtc3Bpbm5lclwiPjwvaT4gQ2hhcmdlbWVudCBkZXMgYWdlbmNlcy4uLlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+YDtcclxuXHJcbiAgICAgICAgICAgIC8vIFLDqWN1cMOpcmVyIHRvdXRlcyBsZXMgYWdlbmNlc1xyXG4gICAgICAgICAgICBjb25zdCBhZ2VuY2VzU25hcHNob3QgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdDT05UUk9MRScpLmRvYyhcIkFHRU5DRVNcIikuY29sbGVjdGlvbihcIk5HX1RJQ0tFVFwiKS5nZXQoKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChhZ2VuY2VzU25hcHNob3QuZW1wdHkpIHtcclxuICAgICAgICAgICAgICAgIGFnZW5jZXNMaXN0LmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPVwiZXJyb3ItbWVzc2FnZVwiPkF1Y3VuZSBhZ2VuY2UgdHJvdXbDqWU8L2Rpdj4nO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBSw6ljdXDDqXJlciB0b3V0ZXMgbGVzIGRlc3RpbmF0aW9uc1xyXG4gICAgICAgICAgICBjb25zdCBkZXN0aW5hdGlvbnNTbmFwc2hvdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ0NPTlRST0xFJykuZG9jKFwiREVTVElOQVRJT05cIikuY29sbGVjdGlvbihcIk5HX1RSQVZFTFwiKS5nZXQoKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIENyw6llciB1bmUgbWFwIGRlcyBkZXN0aW5hdGlvbnMgZ3JvdXDDqWVzIHBhciB1aWRcclxuICAgICAgICAgICAgY29uc3QgZGVzdGluYXRpb25zTWFwID0gbmV3IE1hcCgpO1xyXG4gICAgICAgICAgICBkZXN0aW5hdGlvbnNTbmFwc2hvdC5mb3JFYWNoKGRvYyA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhLnVpZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghZGVzdGluYXRpb25zTWFwLmhhcyhkYXRhLnVpZCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb25zTWFwLnNldChkYXRhLnVpZCwgW10pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbnNNYXAuZ2V0KGRhdGEudWlkKS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmlsbGUxOiBkYXRhLnZpbGxlMSB8fCAnTm9uIHNww6ljaWZpw6llJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcXVhcnRpZXIxOiBkYXRhLnF1YXJ0aWVyMSB8fCAnTm9uIHNww6ljaWZpw6knLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogZG9jLmlkXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gVmlkZXIgbGEgbGlzdGVcclxuICAgICAgICAgICAgYWdlbmNlc0xpc3QuaW5uZXJIVE1MID0gJyc7XHJcbiAgICAgICAgICAgIGxldCBoYXNNYXRjaGluZ0FnZW5jZXMgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgIC8vIFBhcmNvdXJpciB0b3V0ZXMgbGVzIGFnZW5jZXNcclxuICAgICAgICAgICAgYWdlbmNlc1NuYXBzaG90LmZvckVhY2goZG9jID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGFnZW5jZURhdGEgPSBkb2MuZGF0YSgpO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLyBWw6lyaWZpZXIgc2kgbCdhZ2VuY2UgYSBkZXMgZGVzdGluYXRpb25zXHJcbiAgICAgICAgICAgICAgICBpZiAoYWdlbmNlRGF0YS51aWQgJiYgZGVzdGluYXRpb25zTWFwLmhhcyhhZ2VuY2VEYXRhLnVpZCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBoYXNNYXRjaGluZ0FnZW5jZXMgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlc3RpbmF0aW9ucyA9IGRlc3RpbmF0aW9uc01hcC5nZXQoYWdlbmNlRGF0YS51aWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIENyw6llciBsYSBjYXJ0ZSBkJ2FnZW5jZVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFnZW5jZUNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgICAgICAgICBhZ2VuY2VDYXJkLmNsYXNzTmFtZSA9ICdhZ2VuY2UtY2FyZCc7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gQ3LDqWVyIGxlIGNvbnRlbnUgZGUgbGEgY2FydGUgYXZlYyB0b3V0ZXMgbGVzIGRlc3RpbmF0aW9uc1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkZXN0aW5hdGlvbnNIVE1MID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb25zLmZvckVhY2goZGVzdCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lcklkID0gYGJ1cy1jb250YWluZXItJHtkZXN0LmlkLnJlcGxhY2UoL1xccysvZywgJy0nKX1gO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ3LDqWF0aW9uIGR1IGNvbnRlbmV1ciBwb3VyIGxhIGRlc3RpbmF0aW9uOicsIGRlc3QudmlsbGUxLCBkZXN0LnF1YXJ0aWVyMSwgJ0lEOicsIGNvbnRhaW5lcklkKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc3RpbmF0aW9uc0hUTUwgKz0gYFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRlc3RpbmF0aW9uLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGVzdGluYXRpb24taGVhZGVyXCIgZGF0YS1kZXN0aW5hdGlvbi1pZD1cIiR7ZGVzdC5pZH1cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtbWFwLW1hcmtlci1hbHRcIj48L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPiR7ZGVzdC52aWxsZTF9LCAke2Rlc3QucXVhcnRpZXIxfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtY2hldnJvbi1kb3duIGFycm93XCI+PC9pPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCIke2NvbnRhaW5lcklkfVwiIGNsYXNzPVwiYnVzLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibG9hZGluZy1idXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLXNwaW5uZXIgZmEtc3BpblwiPjwvaT4gQ2hhcmdlbWVudCBkZXMgYnVzLi4uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YDtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBhZ2VuY2VDYXJkLmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFnZW5jZS1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhZ2VuY2UtbmFtZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWJ1aWxkaW5nXCI+PC9pPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7YWdlbmNlRGF0YS5hZ2VuY2UgfHwgJ05vbSBub24gZGlzcG9uaWJsZSd9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXN0aW5hdGlvbnMtbGlzdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7ZGVzdGluYXRpb25zSFRNTH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICBgO1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGFnZW5jZXNMaXN0LmFwcGVuZENoaWxkKGFnZW5jZUNhcmQpO1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIEFqb3V0ZXIgbGVzIMOpY291dGV1cnMgZCfDqXbDqW5lbWVudHMgYXByw6hzIGwnaW5zZXJ0aW9uIGRhbnMgbGUgRE9NXHJcbiAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb25zLmZvckVhY2goZGVzdCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lcklkID0gYGJ1cy1jb250YWluZXItJHtkZXN0LmlkLnJlcGxhY2UoL1xccysvZywgJy0nKX1gO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb250YWluZXJJZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlciA9IGNvbnRhaW5lciA/IGNvbnRhaW5lci5wcmV2aW91c0VsZW1lbnRTaWJsaW5nIDogbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY29udGFpbmVyIHx8ICFoZWFkZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ8OJbMOpbWVudCBub24gdHJvdXbDqSBwb3VyIGxhIGRlc3RpbmF0aW9uOicsIGRlc3QuaWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBTdXBwcmltZXIgZCdhYm9yZCBsZXMgYW5jaWVucyDDqWNvdXRldXJzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0hlYWRlciA9IGhlYWRlci5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlci5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChuZXdIZWFkZXIsIGhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBBam91dGVyIGxlIG5vdXZlbCDDqWNvdXRldXIgZCfDqXbDqW5lbWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdIZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ2xpYyBzdXIgbGEgZGVzdGluYXRpb246JywgZGVzdC5pZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBCYXNjdWxlciBsYSBjbGFzc2Ugc2hvd1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC50b2dnbGUoJ3Nob3cnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2kgbGUgY29udGVuZXVyIGVzdCB2aXNpYmxlIGV0IHZpZGUsIGNoYXJnZXIgbGVzIGJ1c1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRhaW5lci5jbGFzc0xpc3QuY29udGFpbnMoJ3Nob3cnKSAmJiBjb250YWluZXIuY2hpbGRyZW4ubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0NoYXJnZW1lbnQgZGVzIGJ1cyBwb3VyOicsIGRlc3QudmlsbGUxLCBkZXN0LnF1YXJ0aWVyMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgYWZmaWNoZXJCdXMoZGVzdC5pZCwgY29udGFpbmVyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJldXIgbG9ycyBkdSBjaGFyZ2VtZW50IGRlcyBidXM6JywgZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9XCJlcnJvclwiPkVycmV1ciBsb3JzIGR1IGNoYXJnZW1lbnQgZGVzIGJ1czwvZGl2Pic7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvLyBBZmZpY2hlciB1biBtZXNzYWdlIHNpIGF1Y3VuZSBjb3JyZXNwb25kYW5jZSBuJ2Egw6l0w6kgdHJvdXbDqWVcclxuICAgICAgICAgICAgaWYgKCFoYXNNYXRjaGluZ0FnZW5jZXMpIHtcclxuICAgICAgICAgICAgICAgIGFnZW5jZXNMaXN0LmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPVwiZXJyb3ItbWVzc2FnZVwiPkF1Y3VuZSBhZ2VuY2UgYXZlYyBkZXN0aW5hdGlvbiBjb3JyZXNwb25kYW50ZSB0cm91dsOpZTwvZGl2Pic7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycmV1ciBsb3JzIGR1IGNoYXJnZW1lbnQgZGVzIGFnZW5jZXM6XCIsIGVycm9yKTtcclxuICAgICAgICAgICAgYWdlbmNlc0xpc3QuaW5uZXJIVE1MID0gYFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVycm9yLW1lc3NhZ2VcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1leGNsYW1hdGlvbi1jaXJjbGVcIj48L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgVW5lIGVycmV1ciBlc3Qgc3VydmVudWUgbG9ycyBkdSBjaGFyZ2VtZW50IGRlcyBhZ2VuY2VzLiBWZXVpbGxleiByw6llc3NheWVyLlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+YDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gR2VzdGlvbiBkdSBtZW51IG1vYmlsZVxyXG4gICAgaWYgKG1vYmlsZU1lbnVCdG4gJiYgbmF2TGlua3MpIHtcclxuICAgICAgICBtb2JpbGVNZW51QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIG5hdkxpbmtzLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKG5hdkxpbmtzLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykpIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBGZXJtZXIgbGUgbWVudSBsb3JzIGR1IGNsaWMgc3VyIHVuIGxpZW5cclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubmF2LWxpbmtzIGEnKS5mb3JFYWNoKGxpbmsgPT4ge1xyXG4gICAgICAgICAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5hdkxpbmtzLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykpIHtcclxuICAgICAgICAgICAgICAgICAgICBtb2JpbGVNZW51QnRuLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIG5hdkxpbmtzLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hhcmdlciBsZXMgYWdlbmNlcyBhdSBkw6ltYXJyYWdlXHJcbiAgICBkaXNwbGF5QWdlbmNlcygpO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/tracabilite.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/tracabilite.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;